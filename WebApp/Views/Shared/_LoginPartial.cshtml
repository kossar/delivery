@using Microsoft.AspNetCore.Identity
@using Domain.App.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@Resources.Views.Login._Login.Hello <span class="font-weight-bolder">@user.FirstName</span></a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new {area = ""})">
                <button type="submit" class="nav-link btn btn-link text-dark">@Resources.Views.Login._Login.Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a id="register" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">@Resources.Views.Login._Login.Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">@Resources.Views.Login._Login.Login</a>
        </li>
    }
</ul>